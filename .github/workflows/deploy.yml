name: Deploy Flask App to AWS EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-1

    - name: Launch EC2 instance
      id: ec2
      run: |
        INSTANCE_ID=$(aws ec2 run-instances \
          --image-id ami-04365bbdfe487ccf2 \
          --instance-type t3.micro \
          --key-name ${{ secrets.KEY_PAIR_NAME }} \
          --security-groups sg-03311b57e0cda8d74 \
          --subnet-id subnet-090d5f4dd3137a324 \
          --associate-public-ip-address \
          --query 'Instances[0].InstanceId' \
          --output text)

        echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

        aws ec2 wait instance-running --instance-ids $INSTANCE_ID

        PUBLIC_IP=$(aws ec2 describe-instances \
          --instance-ids $INSTANCE_ID \
          --query 'Reservations[0].Instances[0].PublicIpAddress' \
          --output text)

        echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

    - name: Wait for EC2
      run: sleep 30

    - name: Wait for EC2 to be ready
      run: |
        for i in $(seq 1 5); do
          nc -zv ${{ env.PUBLIC_IP }} 22 && break
          echo "Waiting for SSH..."
          sleep 10
        done


    - name: Deploy Flask app via SSH
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ env.PUBLIC_IP }}
        username: ubuntu
        key: ${{ secrets.PRIVATE_KEY }}
        script: |
          sudo apt update
          sudo apt install -y docker.io
          docker pull batman69/genrate-password:latest
          docker run -d -p 5000:5000 batman69/genrate-password:latest

    - name: Test the app
      run: |
        sleep 15
        curl http://${{ env.PUBLIC_IP }}:5000/generate

